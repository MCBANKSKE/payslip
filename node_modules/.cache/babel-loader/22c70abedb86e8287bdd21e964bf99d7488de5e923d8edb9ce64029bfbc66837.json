{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Applications\\\\payslip\\\\src\\\\components\\\\BankStatementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Grid, Paper, Typography, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport format from 'date-fns/format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BankStatementForm = ({\n  settings\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    account_holder: '',\n    account_number: '',\n    periodFrom: null,\n    periodTo: null,\n    transactions: [],\n    initialBalance: 0\n  });\n  const [newTransaction, setNewTransaction] = useState({\n    date: null,\n    description: '',\n    amount: '',\n    type: 'credit'\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTransactionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const calculateBalance = (transactions, initialBalance) => {\n    let balance = parseFloat(initialBalance);\n    return transactions.map(transaction => {\n      const amount = parseFloat(transaction.amount);\n      balance += transaction.type === 'credit' ? amount : -amount;\n      return {\n        ...transaction,\n        balance: balance.toFixed(2)\n      };\n    });\n  };\n  const addTransaction = () => {\n    if (!newTransaction.date || !newTransaction.description || !newTransaction.amount) {\n      alert('Please fill in all transaction fields');\n      return;\n    }\n    const updatedTransactions = [...formData.transactions, {\n      ...newTransaction,\n      date: format(newTransaction.date, 'yyyy-MM-dd'),\n      amount: parseFloat(newTransaction.amount)\n    }];\n    updatedTransactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n    setNewTransaction({\n      date: null,\n      description: '',\n      amount: '',\n      type: 'credit'\n    });\n  };\n  const removeTransaction = index => {\n    const updatedTransactions = formData.transactions.filter((_, i) => i !== index);\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.account_holder || !formData.account_number || !formData.periodFrom || !formData.periodTo) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    const requestData = {\n      ...formData,\n      bankName: settings.bankName,\n      currency: settings.currency,\n      bankLogo: settings.bankLogo,\n      periodFrom: format(formData.periodFrom, 'yyyy-MM-dd'),\n      periodTo: format(formData.periodTo, 'yyyy-MM-dd')\n    };\n    try {\n      const response = await fetch('http://localhost:5000/generate-bank-statement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate bank statement');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `bank_statement_${formData.account_number}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error generating bank statement');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: 20,\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Bank Statement Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Account Holder\",\n            name: \"account_holder\",\n            value: formData.account_holder,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Account Number\",\n            name: \"account_number\",\n            value: formData.account_number,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Period From\",\n              value: formData.periodFrom,\n              onChange: date => setFormData(prev => ({\n                ...prev,\n                periodFrom: date\n              })),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Period To\",\n              value: formData.periodTo,\n              onChange: date => setFormData(prev => ({\n                ...prev,\n                periodTo: date\n              })),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Initial Balance\",\n            type: \"number\",\n            name: \"initialBalance\",\n            value: formData.initialBalance,\n            onChange: handleInputChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [settings.currency, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Add Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Transaction Date\",\n              value: newTransaction.date,\n              onChange: date => setNewTransaction(prev => ({\n                ...prev,\n                date\n              })),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Description\",\n            name: \"description\",\n            value: newTransaction.description,\n            onChange: handleTransactionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Amount\",\n            type: \"number\",\n            name: \"amount\",\n            value: newTransaction.amount,\n            onChange: handleTransactionChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [settings.currency, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            select: true,\n            label: \"Type\",\n            name: \"type\",\n            value: newTransaction.type,\n            onChange: handleTransactionChange,\n            SelectProps: {\n              native: true\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"credit\",\n              children: \"Credit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"debit\",\n              children: \"Debit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addTransaction,\n            style: {\n              marginTop: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"Amount (\", settings.currency, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"Balance (\", settings.currency, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: formData.transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: transaction.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: transaction.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: transaction.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: parseFloat(transaction.amount).toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: transaction.balance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => removeTransaction(index),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Generate Bank Statement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(BankStatementForm, \"DdbS0bbBDzGooHggmK2RzQRUrEY=\");\n_c = BankStatementForm;\nexport default BankStatementForm;\nvar _c;\n$RefreshReg$(_c, \"BankStatementForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Grid","Paper","Typography","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DeleteIcon","AddIcon","AdapterDateFns","LocalizationProvider","DatePicker","format","jsxDEV","_jsxDEV","BankStatementForm","settings","_s","formData","setFormData","account_holder","account_number","periodFrom","periodTo","transactions","initialBalance","newTransaction","setNewTransaction","date","description","amount","type","handleInputChange","e","name","value","target","prev","handleTransactionChange","calculateBalance","balance","parseFloat","map","transaction","toFixed","addTransaction","alert","updatedTransactions","sort","a","b","Date","transactionsWithBalance","removeTransaction","index","filter","_","i","handleSubmit","preventDefault","requestData","bankName","currency","bankLogo","response","fetch","method","headers","body","JSON","stringify","ok","Error","blob","url","window","URL","createObjectURL","document","createElement","href","download","appendChild","click","revokeObjectURL","error","console","style","padding","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","sm","required","fullWidth","label","onChange","dateAdapter","renderInput","params","InputProps","startAdornment","select","SelectProps","native","color","onClick","align","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Applications/payslip/src/components/BankStatementForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  TextField,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport format from 'date-fns/format';\n\nconst BankStatementForm = ({ settings }) => {\n  const [formData, setFormData] = useState({\n    account_holder: '',\n    account_number: '',\n    periodFrom: null,\n    periodTo: null,\n    transactions: [],\n    initialBalance: 0, \n  });\n\n  const [newTransaction, setNewTransaction] = useState({\n    date: null,\n    description: '',\n    amount: '',\n    type: 'credit' \n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleTransactionChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const calculateBalance = (transactions, initialBalance) => {\n    let balance = parseFloat(initialBalance);\n    return transactions.map(transaction => {\n      const amount = parseFloat(transaction.amount);\n      balance += transaction.type === 'credit' ? amount : -amount;\n      return { ...transaction, balance: balance.toFixed(2) };\n    });\n  };\n\n  const addTransaction = () => {\n    if (!newTransaction.date || !newTransaction.description || !newTransaction.amount) {\n      alert('Please fill in all transaction fields');\n      return;\n    }\n\n    const updatedTransactions = [\n      ...formData.transactions,\n      {\n        ...newTransaction,\n        date: format(newTransaction.date, 'yyyy-MM-dd'),\n        amount: parseFloat(newTransaction.amount)\n      }\n    ];\n\n    updatedTransactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n\n    setNewTransaction({\n      date: null,\n      description: '',\n      amount: '',\n      type: 'credit'\n    });\n  };\n\n  const removeTransaction = (index) => {\n    const updatedTransactions = formData.transactions.filter((_, i) => i !== index);\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.account_holder || !formData.account_number || !formData.periodFrom || !formData.periodTo) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    const requestData = {\n      ...formData,\n      bankName: settings.bankName,\n      currency: settings.currency,\n      bankLogo: settings.bankLogo,\n      periodFrom: format(formData.periodFrom, 'yyyy-MM-dd'),\n      periodTo: format(formData.periodTo, 'yyyy-MM-dd')\n    };\n\n    try {\n      const response = await fetch('http://localhost:5000/generate-bank-statement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to generate bank statement');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `bank_statement_${formData.account_number}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error generating bank statement');\n    }\n  };\n\n  return (\n    <Paper style={{ padding: 20, marginTop: 20 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Bank Statement Generator\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              fullWidth\n              label=\"Account Holder\"\n              name=\"account_holder\"\n              value={formData.account_holder}\n              onChange={handleInputChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              fullWidth\n              label=\"Account Number\"\n              name=\"account_number\"\n              value={formData.account_number}\n              onChange={handleInputChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Period From\"\n                value={formData.periodFrom}\n                onChange={(date) => setFormData(prev => ({ ...prev, periodFrom: date }))}\n                renderInput={(params) => <TextField {...params} fullWidth required />}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Period To\"\n                value={formData.periodTo}\n                onChange={(date) => setFormData(prev => ({ ...prev, periodTo: date }))}\n                renderInput={(params) => <TextField {...params} fullWidth required />}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Initial Balance\"\n              type=\"number\"\n              name=\"initialBalance\"\n              value={formData.initialBalance}\n              onChange={handleInputChange}\n              InputProps={{\n                startAdornment: <span>{settings.currency} </span>\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" gutterBottom>\n              Add Transaction\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Transaction Date\"\n                value={newTransaction.date}\n                onChange={(date) => setNewTransaction(prev => ({ ...prev, date }))}\n                renderInput={(params) => <TextField {...params} fullWidth required />}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Description\"\n              name=\"description\"\n              value={newTransaction.description}\n              onChange={handleTransactionChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              name=\"amount\"\n              value={newTransaction.amount}\n              onChange={handleTransactionChange}\n              InputProps={{\n                startAdornment: <span>{settings.currency} </span>\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              fullWidth\n              select\n              label=\"Type\"\n              name=\"type\"\n              value={newTransaction.type}\n              onChange={handleTransactionChange}\n              SelectProps={{\n                native: true\n              }}\n            >\n              <option value=\"credit\">Credit</option>\n              <option value=\"debit\">Debit</option>\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={addTransaction}\n              style={{ marginTop: 8 }}\n            >\n              <AddIcon />\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell align=\"right\">Amount ({settings.currency})</TableCell>\n                    <TableCell align=\"right\">Balance ({settings.currency})</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {formData.transactions.map((transaction, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{transaction.date}</TableCell>\n                      <TableCell>{transaction.description}</TableCell>\n                      <TableCell>{transaction.type}</TableCell>\n                      <TableCell align=\"right\">{parseFloat(transaction.amount).toFixed(2)}</TableCell>\n                      <TableCell align=\"right\">{transaction.balance}</TableCell>\n                      <TableCell>\n                        <IconButton onClick={() => removeTransaction(index)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              Generate Bank Statement\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n\nexport default BankStatementForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}