{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Applications\\\\payslip\\\\src\\\\components\\\\BankStatementForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, TextField, Button, Grid, Typography, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { format } from 'date-fns';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateTransactionId = () => {\n  const timestamp = new Date().getTime().toString().slice(-6);\n  const random = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n  return `TXN${timestamp}${random}`;\n};\nconst BankStatementForm = ({\n  settings\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    account_holder: '',\n    account_number: '',\n    periodFrom: null,\n    periodTo: null,\n    transactions: [],\n    initialBalance: 0\n  });\n  const [newTransaction, setNewTransaction] = useState({\n    date: null,\n    transaction_id: '',\n    description: '',\n    amount_in: '',\n    amount_out: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTransactionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const calculateBalance = (transactions, initialBalance) => {\n    let balance = parseFloat(initialBalance);\n    return transactions.map(transaction => {\n      const amountIn = parseFloat(transaction.amount_in) || 0;\n      const amountOut = parseFloat(transaction.amount_out) || 0;\n      balance = balance + amountIn - amountOut;\n      return {\n        ...transaction,\n        balance: balance.toFixed(2)\n      };\n    });\n  };\n  const addTransaction = () => {\n    if (!newTransaction.date || !newTransaction.description || !newTransaction.amount_in && !newTransaction.amount_out) {\n      alert('Please fill in the required transaction fields');\n      return;\n    }\n    if (newTransaction.amount_in && newTransaction.amount_out) {\n      alert('Please enter either an In amount or an Out amount, not both');\n      return;\n    }\n    const transactionToAdd = {\n      ...newTransaction,\n      date: format(newTransaction.date, 'yyyy-MM-dd'),\n      transaction_id: generateTransactionId(),\n      amount_in: newTransaction.amount_in || '0',\n      amount_out: newTransaction.amount_out || '0'\n    };\n    const updatedTransactions = [...formData.transactions, transactionToAdd];\n\n    // Sort transactions by date\n    updatedTransactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    // Calculate balances\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n\n    // Reset new transaction form\n    setNewTransaction({\n      date: null,\n      transaction_id: '',\n      description: '',\n      amount_in: '',\n      amount_out: ''\n    });\n  };\n  const removeTransaction = index => {\n    const updatedTransactions = formData.transactions.filter((_, i) => i !== index);\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.account_holder || !formData.account_number || !formData.periodFrom || !formData.periodTo) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    const requestData = {\n      ...formData,\n      bankName: settings.bankName,\n      currency: settings.currency,\n      bankLogo: settings.bankLogo,\n      periodFrom: format(formData.periodFrom, 'yyyy-MM-dd'),\n      periodTo: format(formData.periodTo, 'yyyy-MM-dd')\n    };\n    try {\n      const response = await fetch('http://localhost:5000/generate-bank-statement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate bank statement');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `bank_statement_${formData.account_number}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error generating bank statement');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: 20,\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Bank Statement Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Account Holder\",\n            name: \"account_holder\",\n            value: formData.account_holder,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Account Number\",\n            name: \"account_number\",\n            value: formData.account_number,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Period From\",\n              value: formData.periodFrom,\n              onChange: date => setFormData(prev => ({\n                ...prev,\n                periodFrom: date\n              })),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Period To\",\n              value: formData.periodTo,\n              onChange: date => setFormData(prev => ({\n                ...prev,\n                periodTo: date\n              })),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Initial Balance\",\n            type: \"number\",\n            name: \"initialBalance\",\n            value: formData.initialBalance,\n            onChange: handleInputChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [settings.currency, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Add Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Date\",\n              value: newTransaction.date,\n              onChange: date => setNewTransaction(prev => ({\n                ...prev,\n                date\n              })),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Description\",\n            name: \"description\",\n            value: newTransaction.description,\n            onChange: handleTransactionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Amount In\",\n            type: \"number\",\n            name: \"amount_in\",\n            value: newTransaction.amount_in,\n            onChange: handleTransactionChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [settings.currency, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Amount Out\",\n            type: \"number\",\n            name: \"amount_out\",\n            value: newTransaction.amount_out,\n            onChange: handleTransactionChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [settings.currency, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addTransaction,\n            style: {\n              marginTop: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Transaction ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"In (\", settings.currency, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"Out (\", settings.currency, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"Balance (\", settings.currency, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: formData.transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: transaction.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: transaction.transaction_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: parseFloat(transaction.amount_in) > 0 ? parseFloat(transaction.amount_in).toFixed(2) : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: parseFloat(transaction.amount_out) > 0 ? parseFloat(transaction.amount_out).toFixed(2) : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: transaction.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: transaction.balance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => removeTransaction(index),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Generate Bank Statement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(BankStatementForm, \"jwZy/Nb9nLGHnIieS1XNLJs0BpU=\");\n_c = BankStatementForm;\nexport default BankStatementForm;\nvar _c;\n$RefreshReg$(_c, \"BankStatementForm\");","map":{"version":3,"names":["React","useState","Container","Paper","TextField","Button","Grid","Typography","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DatePicker","LocalizationProvider","AdapterDateFns","format","DeleteIcon","AddIcon","jsxDEV","_jsxDEV","generateTransactionId","timestamp","Date","getTime","toString","slice","random","Math","floor","padStart","BankStatementForm","settings","_s","formData","setFormData","account_holder","account_number","periodFrom","periodTo","transactions","initialBalance","newTransaction","setNewTransaction","date","transaction_id","description","amount_in","amount_out","handleInputChange","e","name","value","target","prev","handleTransactionChange","calculateBalance","balance","parseFloat","map","transaction","amountIn","amountOut","toFixed","addTransaction","alert","transactionToAdd","updatedTransactions","sort","a","b","transactionsWithBalance","removeTransaction","index","filter","_","i","handleSubmit","preventDefault","requestData","bankName","currency","bankLogo","response","fetch","method","headers","body","JSON","stringify","ok","Error","blob","url","window","URL","createObjectURL","document","createElement","href","download","appendChild","click","revokeObjectURL","error","console","style","padding","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","sm","required","fullWidth","label","onChange","dateAdapter","renderInput","params","type","InputProps","startAdornment","color","onClick","align","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Applications/payslip/src/components/BankStatementForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Grid,\n  Typography,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { format } from 'date-fns';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst generateTransactionId = () => {\n  const timestamp = new Date().getTime().toString().slice(-6);\n  const random = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n  return `TXN${timestamp}${random}`;\n};\n\nconst BankStatementForm = ({ settings }) => {\n  const [formData, setFormData] = useState({\n    account_holder: '',\n    account_number: '',\n    periodFrom: null,\n    periodTo: null,\n    transactions: [],\n    initialBalance: 0,\n  });\n\n  const [newTransaction, setNewTransaction] = useState({\n    date: null,\n    transaction_id: '',\n    description: '',\n    amount_in: '',\n    amount_out: '',\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleTransactionChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const calculateBalance = (transactions, initialBalance) => {\n    let balance = parseFloat(initialBalance);\n    return transactions.map(transaction => {\n      const amountIn = parseFloat(transaction.amount_in) || 0;\n      const amountOut = parseFloat(transaction.amount_out) || 0;\n      balance = balance + amountIn - amountOut;\n      return { ...transaction, balance: balance.toFixed(2) };\n    });\n  };\n\n  const addTransaction = () => {\n    if (!newTransaction.date || !newTransaction.description || \n        (!newTransaction.amount_in && !newTransaction.amount_out)) {\n      alert('Please fill in the required transaction fields');\n      return;\n    }\n\n    if (newTransaction.amount_in && newTransaction.amount_out) {\n      alert('Please enter either an In amount or an Out amount, not both');\n      return;\n    }\n\n    const transactionToAdd = {\n      ...newTransaction,\n      date: format(newTransaction.date, 'yyyy-MM-dd'),\n      transaction_id: generateTransactionId(),\n      amount_in: newTransaction.amount_in || '0',\n      amount_out: newTransaction.amount_out || '0'\n    };\n\n    const updatedTransactions = [\n      ...formData.transactions,\n      transactionToAdd\n    ];\n\n    // Sort transactions by date\n    updatedTransactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    // Calculate balances\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n\n    // Reset new transaction form\n    setNewTransaction({\n      date: null,\n      transaction_id: '',\n      description: '',\n      amount_in: '',\n      amount_out: '',\n    });\n  };\n\n  const removeTransaction = (index) => {\n    const updatedTransactions = formData.transactions.filter((_, i) => i !== index);\n    const transactionsWithBalance = calculateBalance(updatedTransactions, formData.initialBalance);\n    setFormData(prev => ({\n      ...prev,\n      transactions: transactionsWithBalance\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.account_holder || !formData.account_number || !formData.periodFrom || !formData.periodTo) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    const requestData = {\n      ...formData,\n      bankName: settings.bankName,\n      currency: settings.currency,\n      bankLogo: settings.bankLogo,\n      periodFrom: format(formData.periodFrom, 'yyyy-MM-dd'),\n      periodTo: format(formData.periodTo, 'yyyy-MM-dd')\n    };\n\n    try {\n      const response = await fetch('http://localhost:5000/generate-bank-statement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to generate bank statement');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `bank_statement_${formData.account_number}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error generating bank statement');\n    }\n  };\n\n  return (\n    <Paper style={{ padding: 20, marginTop: 20 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Bank Statement Generator\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              fullWidth\n              label=\"Account Holder\"\n              name=\"account_holder\"\n              value={formData.account_holder}\n              onChange={handleInputChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              fullWidth\n              label=\"Account Number\"\n              name=\"account_number\"\n              value={formData.account_number}\n              onChange={handleInputChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Period From\"\n                value={formData.periodFrom}\n                onChange={(date) => setFormData(prev => ({ ...prev, periodFrom: date }))}\n                renderInput={(params) => <TextField {...params} fullWidth required />}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Period To\"\n                value={formData.periodTo}\n                onChange={(date) => setFormData(prev => ({ ...prev, periodTo: date }))}\n                renderInput={(params) => <TextField {...params} fullWidth required />}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Initial Balance\"\n              type=\"number\"\n              name=\"initialBalance\"\n              value={formData.initialBalance}\n              onChange={handleInputChange}\n              InputProps={{\n                startAdornment: <span>{settings.currency} </span>\n              }}\n            />\n          </Grid>\n\n          {/* New Transaction Form */}\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" gutterBottom>\n              Add Transaction\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Date\"\n                value={newTransaction.date}\n                onChange={(date) => setNewTransaction(prev => ({ ...prev, date }))}\n                renderInput={(params) => <TextField {...params} fullWidth required />}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Description\"\n              name=\"description\"\n              value={newTransaction.description}\n              onChange={handleTransactionChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              fullWidth\n              label=\"Amount In\"\n              type=\"number\"\n              name=\"amount_in\"\n              value={newTransaction.amount_in}\n              onChange={handleTransactionChange}\n              InputProps={{\n                startAdornment: <span>{settings.currency} </span>\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              fullWidth\n              label=\"Amount Out\"\n              type=\"number\"\n              name=\"amount_out\"\n              value={newTransaction.amount_out}\n              onChange={handleTransactionChange}\n              InputProps={{\n                startAdornment: <span>{settings.currency} </span>\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={addTransaction}\n              style={{ marginTop: 8 }}\n            >\n              <AddIcon />\n            </Button>\n          </Grid>\n\n          {/* Transactions Table */}\n          <Grid item xs={12}>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>No.</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Transaction ID</TableCell>\n                    <TableCell align=\"right\">In ({settings.currency})</TableCell>\n                    <TableCell align=\"right\">Out ({settings.currency})</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell align=\"right\">Balance ({settings.currency})</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {formData.transactions.map((transaction, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{index + 1}</TableCell>\n                      <TableCell>{transaction.date}</TableCell>\n                      <TableCell>{transaction.transaction_id}</TableCell>\n                      <TableCell align=\"right\">\n                        {parseFloat(transaction.amount_in) > 0 ? parseFloat(transaction.amount_in).toFixed(2) : '-'}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {parseFloat(transaction.amount_out) > 0 ? parseFloat(transaction.amount_out).toFixed(2) : '-'}\n                      </TableCell>\n                      <TableCell>{transaction.description}</TableCell>\n                      <TableCell align=\"right\">{transaction.balance}</TableCell>\n                      <TableCell>\n                        <IconButton onClick={() => removeTransaction(index)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              Generate Bank Statement\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n\nexport default BankStatementForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}